<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://www.thomaslevine.com/</id>
  <title>Thomas Levine</title>
  <updated>2013-08-05T07:00:00Z</updated>
  <link rel="alternate" href="http://www.thomaslevine.com/"/>
  <link rel="self" href="http://www.thomaslevine.com/!/feed.xml"/>
  <author>
    <name>Thomas Levine</name>
    <uri>http://www.thomaslevine.com</uri>
  </author>
  <entry>
    <id>tag:www.thomaslevine.com,2013-08-05:/!/higher-power-distance-measures/index.html</id>
    <title type="html">Higher-power distance measures</title>
    <published>2013-08-05T07:00:00Z</published>
    <updated>2013-08-05T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/higher-power-distance-measures/index.html"/>
    <content type="html">&lt;h2 id="sums-of-shapes"&gt;Sums of shapes&lt;/h2&gt;
&lt;p&gt;Let’s say we have a bunch of numbers, represented by the tick marks towards
the bottom the fancy interactive plot drawing thingy below. Next, we chose
some other number, represented by the big pink bar that you can drag.&lt;/p&gt;

&lt;p&gt;For each number in our bunch (each tick mark), we could draw a line from the
number to the other number we chose (the pink bar). Then we could draw a square
for each of these numbers with a side as long as the this line. (These squares
are represented by the squares in the plot thingy.) We could add up the areas
of all of these squares. People call that the &lt;strong&gt;sum of squared error&lt;/strong&gt; or the
&lt;strong&gt;sum of squares&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Instead of adding up the squares, we could just add up the lines. People call
that the &lt;strong&gt;sum of absolute errors&lt;/strong&gt;, but I like calling it the &lt;strong&gt;sum of lines&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sometimes, these lines will have no length because the two numbers that form
the line (the tick mark and the pink bar) are the same number. We could draw
a point for each tick mark whose value is not exactly the same as the pink bar.
Then we could count how many points we have and call that the &lt;strong&gt;sum of points&lt;/strong&gt;.&lt;/p&gt;

&lt;style&gt;
#viz &gt; .screen-size-warning { display: none; }
@media screen and (max-width: 640px) {
  #viz &gt; * { display: none; }
  #viz &gt; .screen-size-warning {
    display: block;
    text-align: center;
    font-weight: bold;
    border: 2px solid;
    padding: 0.5em;
  }
}
&lt;/style&gt;

&lt;div id="viz" style="width: 640px; margin-left: auto; margin-right: auto;"&gt;
  &lt;div class="screen-size-warning"&gt;Make this window wider (to 640 pixels)&lt;br /&gt;to see the table.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;small&gt;
  Nota bene: The line and square at the bottom right are &lt;strong&gt;proportional&lt;/strong&gt; to but
  &lt;strong&gt;not equal&lt;/strong&gt; to the sums of lines and squares, respectively.
&lt;/small&gt;
&lt;script src="/!/higher-power-distance-measures/d3.v3.min.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="/!/higher-power-distance-measures/script.js"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id="values-of-the-other-number-that-minimize-the-sums-of-shapes"&gt;Values of the other number that minimize the sums of shapes&lt;/h2&gt;
&lt;p&gt;If you play around with the plot above, you’ll find one location of the pink bar
that yields the smallest sum of squares. (The “Sum of squares” square at the
bottom-right will be smallest for this situation.) We call this location the &lt;strong&gt;mean&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You’ll also find one spot or two adjacent spots that yield the smallest sum of
lines. We call this location the &lt;strong&gt;median&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And you’ll find at least one spot with the smallest sum of points. (This spot
will have particularly few points in the “Sum of points” section at the
bottom-left.) We call this spot the &lt;strong&gt;mode&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="extrapolating-the-distance-measure"&gt;Extrapolating the distance measure&lt;/h2&gt;
&lt;p&gt;I see the sum of points as the zero-order distance measure, the sum of lines
as the one-order distance measure and sum of squares as the two-order distance
measure. A general distance measure that includes all of these is the
sum of n-dimensional volumes (Is there a better word for that?) of the
n-dimensional hypercubes. Said more concisely,&lt;/p&gt;

&lt;script type="math/tex; mode=display"&gt;Distance_n=\sum_i \lvert x_i - c\rvert^n&lt;/script&gt;

&lt;p&gt;where each &lt;script type="math/tex"&gt;i&lt;/script&gt; corresponds to an observation (represented above by tick marks),
&lt;script type="math/tex"&gt;n&lt;/script&gt; is the number of dimensions, and &lt;script type="math/tex"&gt;c&lt;/script&gt; represents that other number
(represented above by the pink bar).&lt;/p&gt;

&lt;h3 id="sum-of-squares"&gt;Sum of squares&lt;/h3&gt;
&lt;p&gt;The sum of squares is thus this.&lt;/p&gt;

&lt;script type="math/tex; mode=display"&gt;Distance_2=\sum_i \lvert x_i - c\rvert^2&lt;/script&gt;

&lt;p&gt;The value of &lt;script type="math/tex"&gt;c&lt;/script&gt; that minimizes &lt;script type="math/tex"&gt;Distance_2&lt;/script&gt; is the &lt;strong&gt;mean&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id="sum-of-lines"&gt;Sum of lines&lt;/h3&gt;
&lt;p&gt;The sum of lines is this.&lt;/p&gt;

&lt;script type="math/tex; mode=display"&gt;Distance_1=\sum_i \lvert x_i - c\rvert^1&lt;/script&gt;

&lt;p&gt;The value of &lt;script type="math/tex"&gt;c&lt;/script&gt; that minimizes &lt;script type="math/tex"&gt;Distance_1&lt;/script&gt; is the &lt;strong&gt;median&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id="sum-of-points"&gt;Sum of points&lt;/h3&gt;
&lt;p&gt;To make this work with the zero-order distance, I proclaim that &lt;script type="math/tex"&gt;0^0&lt;/script&gt; equals 0.
The sum of points is this.&lt;/p&gt;

&lt;script type="math/tex; mode=display"&gt;Distance_0=\sum_i \lvert x_i - c \rvert ^0&lt;/script&gt;

&lt;p&gt;The quantity within the summation is zero if &lt;script type="math/tex"&gt;x_i&lt;/script&gt; equals &lt;script type="math/tex"&gt;c&lt;/script&gt; and one otherwise.&lt;/p&gt;

&lt;p&gt;The value of &lt;script type="math/tex"&gt;c&lt;/script&gt; that minimizes &lt;script type="math/tex"&gt;Distance_1&lt;/script&gt; is the &lt;strong&gt;mode&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="higher-power-distance-measures-emphasize-more-extreme-values"&gt;Higher-power distance measures emphasize more extreme values&lt;/h2&gt;
&lt;p&gt;I see the mode, median and mean as different measures of the center of a
distribution. (I labeled them &lt;script type="math/tex"&gt;c&lt;/script&gt; for “center”.)&lt;/p&gt;

&lt;p&gt;As we increase the power of the distance measure, we use more information from
the tails to produce the measure of the center of the distribution.&lt;/p&gt;

&lt;p&gt;The mode only looks for the most common values; all the information that it conveys
about the other values is that they are less common.&lt;/p&gt;

&lt;p&gt;The median turns out to be the value of middle rank. For example, if there are
9 numbers, the fifth-highest/fifth-lowest is the median. The median doesn’t
distinguish between an observation that is slightly greater than most and an
observation that is exceptionally greater than most.&lt;/p&gt;

&lt;p&gt;Compared to the median, the mean takes more information from extreme values.
It might not be particularly obvious why, so I present a simple example.&lt;/p&gt;

&lt;p&gt;&lt;img src="/!/higher-power-distance-measures/two-observations.jpg" alt="Drawing in marker of the situation explained in the next paragraph" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;If we have only two observations (represented above by the black dots),
the sum of lines will be the same as long
as we choose a center point that is between the two points; the sum of lines
will be the distance between the two points. The sum of squares, on the other
hand, is smallest in the center because we’ll have two smallish squares
(orange) rather than one huge square (teal).&lt;/p&gt;

&lt;h2 id="center-points-for-higher-power-distance-measures"&gt;Center points for higher-power distance measures&lt;/h2&gt;
&lt;p&gt;What center points minimize these higher-power distance measures? I calculated
the distance measures for dimensions up to 100 on the following skewed
distribution, using many different center values for each dimension.&lt;/p&gt;

&lt;p&gt;&lt;img src="/!/higher-power-distance-measures/distribution.png" alt="Histogram of a sample of a Poisson distribution with lambda of 4" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Then I chose the center value with the lowest distance measure and
called that the n-dimensional measure of the distribution’s center.
(Mode is the 0-dimensional measure, median is the
1-dimensional measure, and mean is the 2-dimensional measure.)&lt;/p&gt;

&lt;p&gt;&lt;img src="/!/higher-power-distance-measures/error-plot.png" alt="Line plot of the center values that minimize the n-dimensional distance measure, as a function of n" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;As the number of dimensions goes up, the measure of the center moves in the
direction of the long tail of the distribution.&lt;/p&gt;

&lt;h2 id="questions"&gt;Questions&lt;/h2&gt;
&lt;p&gt;It seems odd to me that I haven’t heard of a sum of cubes.
Is there standard a name for the stuff I just explained?
Does anyone use higher-power distance or centrality measures for real things?&lt;/p&gt;

&lt;p&gt;I’m really quite curious about all of this.
Please tweet, email, phone, &amp;amp;c. me if you know anything.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-08-04:/!/moments-of-a-function/index.html</id>
    <title type="html">Moments of a function</title>
    <published>2013-08-04T07:00:00Z</published>
    <updated>2013-08-04T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/moments-of-a-function/index.html"/>
    <content type="html">&lt;p&gt;I made this table years ago to help me understand what the moments of a function were.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Formula&lt;/th&gt;
      &lt;th&gt;&lt;script type="math/tex"&gt;\mu_{0}&lt;/script&gt;&lt;/th&gt;
      &lt;th&gt;&lt;script type="math/tex"&gt;\mu_{1}&lt;/script&gt;&lt;/th&gt;
      &lt;th&gt;&lt;script type="math/tex"&gt;\mu_{2}&lt;/script&gt;&lt;/th&gt;
      &lt;th&gt;&lt;script type="math/tex"&gt;\mu_{3}&lt;/script&gt;&lt;/th&gt;
      &lt;th&gt;&lt;script type="math/tex"&gt;\mu_{4}&lt;/script&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Crude moment&lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\mu_{n}=E \left( X^n \right) &lt;/script&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\mu&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Central moment&lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\mu_{n}=E \left( \left[ X - E \left( X \right) \right]^n \right)&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\sigma^2&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Standardized moment&lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\frac{\mu_{n}=E \left( \left[ X - E \left( X \right) \right]^n \right)}{\sigma^n}&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\gamma_1&lt;/script&gt;&lt;/td&gt;
      &lt;td&gt;&lt;script type="math/tex"&gt;\gamma_2&lt;/script&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;!-- I found this in some old notes that I'd written in LaTeX.

\begin{table*}
\begin{tabular*}{\textwidth}{@{\extracolsep{\fill}} l l r r r r r}
\toprule
Name                &amp; Formula &amp;
$\mu_{0}$ &amp; $\mu_{1}$ &amp; $\mu_{2}$ &amp; $\mu_{3}$ &amp; $\mu_{4}$ \\
\midrule 
Crude moment        &amp; $\mu_{n}=E \left( X^n \right) $ &amp;
  &amp; $\mu$ &amp; &amp; &amp; \\
Central moment      &amp; $\mu_{n}=E \left( \left[ X - E \left( X \right) \right]^n \right)$ &amp;
1 &amp; 0     &amp; $\sigma^2$ &amp; &amp; \\
Standardized moment &amp; $\frac{\mu_{n}=E \left( \left[ X - E \left( X \right) \right]^n \right)}{\sigma^n}$ &amp;
  &amp; 0     &amp; 1          &amp; $\gamma_1$ &amp; $\gamma_2$ \\
\bottomrule
\end{tabular*}
\caption{\label{moments.tab} Moments of a function, where $\mu=mean$, $\sigma^2=variance$, $\gamma_1=skewness$ and $\gamma_2=kurtosis$.}
\end{table*}

--&gt;

&lt;p&gt;Read it like this: The second (&lt;script type="math/tex"&gt;\mu_2&lt;/script&gt;) central moment is &lt;script type="math/tex"&gt;\sigma^2&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Some moments always have a particular value. For example,
the zeroth central moment is always one; we plug zero into
the central moment formula for &lt;script type="math/tex"&gt;n&lt;/script&gt;, and we wind up taking
the expected value of a bunch of ones.
Some of the moments have special names; &lt;script type="math/tex"&gt;\mu&lt;/script&gt; is the mean,
&lt;script type="math/tex"&gt;\sigma^2&lt;/script&gt;is the variance, &lt;script type="math/tex"&gt;\gamma_1&lt;/script&gt;is the skewness,
and &lt;script type="math/tex"&gt;\gamma_2&lt;/script&gt;is the kurtosis.&lt;/p&gt;

&lt;p&gt;I don’t exactly know what drove me to learn about the moments
of a function. It couldn’t have had anything to do with any sort
of class or work, so I probably just read about them in a book.
And I have yet to find any practical reason to know about them.&lt;/p&gt;

&lt;p&gt;But it was all worth it because now I understand
&lt;a href="http://biostatisticsryangoslingreturns.tumblr.com/post/55797271777"&gt;Biostatistics Ryan Gosling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="biostatistics-ryan-gosling.jpg" alt="Hey girl, I loved you from the E(X) I saw you." /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-08-02:/!/r-curses-for-data-witches/index.html</id>
    <title type="html">R graphics tricks that you probably shouldn't use</title>
    <published>2013-08-02T07:00:00Z</published>
    <updated>2013-08-02T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/r-curses-for-data-witches/index.html"/>
    <content type="html">&lt;style&gt;pre { font-size: 0.8em; }&lt;/style&gt;

&lt;p&gt;I’ve spent/wasted years of my life trying to make nice plots with
base R graphics, so I’ve learned a bunch of base R graphics tricks.
One annoying part of base R graphics is that the defaults look ugly,
so I’m going to show you how to make some bar plots, strip charts,
and line plots that don’t look so ugly.&lt;/p&gt;

&lt;p&gt;You might pick up some useful tricks from this post, but I really
hope that the insanity of it encourages you to use ggplot instead.&lt;/p&gt;

&lt;h2 id="data"&gt;Data&lt;/h2&gt;
&lt;p&gt;I’m going to use data came from an earlier version of
&lt;a href="http://peregrinossantiago.es/eng/pilgrims-office/statistics/"&gt;this website&lt;/a&gt;.
They’re “statistics about pilgrims who have arrived in Santiago”.
The observations are monthly, but I’m missing the Novembers and Decembers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pilgrams &amp;lt;- sqldf("select * from pilgram", dbname = "pilgrams-db.sqlite")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I’m also going to use data from a
&lt;a href="https://data.somervillema.gov/dataset/Results-of-2011-Wellbeing-Study/pjhx-dusc"&gt;wellbeing study&lt;/a&gt;
about Somerville, Massachusetts. There are a lot of missing values in this dataset, and I’m only
trying to show you how to make plots, so I’m just going to remove the missing values.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wellbeing &amp;lt;- na.omit(read.csv("http://data.somervillema.gov/api/views/pjhx-dusc/rows.csv?accessType=DOWNLOAD"))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="bar-plots"&gt;Bar plots&lt;/h2&gt;
&lt;p&gt;Maybe we want count the marital statuses of Somerville residents.
This won’t work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(wellbeing$X24..What.is.your.marital.status.)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instead, you need to give barplot a vector of heights. We can make one with &lt;code&gt;table&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(table(wellbeing$X24..What.is.your.marital.status.))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-1.png" alt="plot of chunk barplot-1" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;I can’t read the bar labels, so let’s make the bars horizontal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(table(wellbeing$X24..What.is.your.marital.status.), horiz = TRUE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-2.png" alt="plot of chunk barplot-2" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Oops. Now the labels are rotated the wrong way. The &lt;code&gt;las&lt;/code&gt; parameter to &lt;code&gt;par&lt;/code&gt; handles that.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(table(wellbeing$X24..What.is.your.marital.status.), horiz = TRUE, las = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-3.png" alt="plot of chunk barplot-3" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;And let’s adjust the margin and bar labels so the text doesn’t fall off.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;levels(wellbeing$X24..What.is.your.marital.status.)[3] &amp;lt;- "Living with a partner\nbut not married"
par(mar = c(5, 12, 4, 2))
barplot(table(wellbeing$X24..What.is.your.marital.status.), horiz = TRUE, las = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-4.png" alt="plot of chunk barplot-4" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;I also want to sort the bars so they’re easier to read.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(sort(table(wellbeing$X24..What.is.your.marital.status.), decreasing = TRUE), horiz = TRUE, las = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-5.png" alt="plot of chunk barplot-5" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;The black border around the bars is noisy; let’s remove it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(
  sort(table(wellbeing$X24..What.is.your.marital.status.), decreasing = TRUE),
  horiz = TRUE, las = 1, border = NA)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-6.png" alt="plot of chunk barplot-6" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Now the colors don’t match. We could just make the bars black,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(
  sort(table(wellbeing$X24..What.is.your.marital.status.), decreasing = TRUE),
  horiz = TRUE, las = 1, border = NA, col = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-7.png" alt="plot of chunk barplot-7" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;but that’s a bit harsh. Instead, let’s make everything grey.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(
  sort(table(wellbeing$X24..What.is.your.marital.status.), decreasing = TRUE),
  horiz = TRUE, las = 1, border = NA,
  col = "#666666", fg = "#333333", col.axis = "#333333")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-8.png" alt="plot of chunk barplot-8" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;And add a title, of course&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(
  sort(table(wellbeing$X24..What.is.your.marital.status.), decreasing = TRUE),
  horiz = TRUE, las = 1, border = NA, col = "#666666", fg = "#333333", col.axis = "#333333", 
  xlab = "Number of residents", main = "Marital statuses of Somerville residents")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/barplot-9.png" alt="plot of chunk barplot-9" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Summing that up, this is approximately what I think the default barplot function should be.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tom.barplot &amp;lt;- function(height, col = 'grey', border = NA, ...) {
  barplot(
    sort(table(height)), col = col, border = border,
    col = '#666666', fg = '#333333', col.axis = '#333333',
    ...
  )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="strip-charts"&gt;Strip charts&lt;/h2&gt;
&lt;p&gt;Here is a strip chart about how people in Somerville are feeling, on a range of 1 to 10.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now.., method = "jitter")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-1.png" alt="plot of chunk stripchart-1" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;The observations are randomly jittered above, but we can also stack the observations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now.., method = "stack")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-2.png" alt="plot of chunk stripchart-2" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Let’s change the scale to emphasize its limits.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now.., method = "stack", xlim = c(1, 10))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-3.png" alt="plot of chunk stripchart-3" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;The white boxes with borders are noisy; let’s change them to filled boxes.
The default point type (&lt;code&gt;pch = 1&lt;/code&gt;) doesn’t support a fill color (&lt;code&gt;bg&lt;/code&gt;),
so we have to switch to a different point type;
here are the different point types, from &lt;code&gt;example(points)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/stripchart-pch.png" alt="pchShow" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Let’s use &lt;code&gt;pch = 22&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(
  wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now..,
  method = "stack", xlim = c(1, 10), col = NA, pch = 22, bg = 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-4.png" alt="plot of chunk stripchart-4" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;That’s just a bar plot. Let’s switch back to jittering and make the
points translucent.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(
  wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now..,
  method = "jitter", xlim = c(1, 10), col = NA, pch = 22, bg = "#00000033")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-5.png" alt="plot of chunk stripchart-5" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Let’s make a nicer axis.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(
  wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now..,
  method = "jitter", xlim = c(1, 10), col = NA, pch = 22, bg = "#00000033", axes = FALSE, 
  xlab = "How happy do you feel right now, on a scale of 1 to 10?",
  main = "How happy Somerville residents feel")
axis(1, at = 1:10)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-6.png" alt="plot of chunk stripchart-6" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;And let’s not waste half of the canvas.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stripchart(
  wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now..,
  method = "jitter", xlim = c(1, 10), col = NA, pch = 22, bg = "#00000033", axes = FALSE, 
  xlab = "How happy do you feel right now, on a scale of 1 to 10?",
  main = "How happy Somerville residents feel", jitter = 0.5, ylim = c(0, 2))
axis(1, at = 1:10)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stripchart-7.png" alt="plot of chunk stripchart-7" class="wide" /&gt;&lt;/p&gt;

&lt;h2 id="stacked-bar-plots"&gt;Stacked bar plots&lt;/h2&gt;
&lt;p&gt;Now we could also color the points by a different color depending on the
gender.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;barplot(
  table(
    wellbeing$X15..Gender..1..female..2..male.,
    wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now..),
  border = NA, col = c("#333333", "#999999"), 
  xlab = "How happy do you feel right now, on a scale of 1 to 10?",
  main = "How happy Somerville residents feel, by gender")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stacked-barplot-1.png" alt="plot of chunk stacked-barplot-1" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;We make the legend in a separate command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wellbeing$X15..Gender..1..female..2..male. &amp;lt;- factor(wellbeing$X15..Gender..1..female..2..male., levels = 1:2)
levels(wellbeing$X15..Gender..1..female..2..male.) &amp;lt;- c("Female", "Male")
col &amp;lt;- c("#333333", "#999999")
barplot(
  table(wellbeing$X15..Gender..1..female..2..male.,
    wellbeing$X1...First.of.all..how.happy.do.you.feel.right.now..),
  border = NA, col = col, xlab = "How happy do you feel right now, on a scale of 1 to 10?", 
  ylab = "Number of residents", main = "How happy Somerville residents feel, by gender")
legend("topleft", legend = levels(wellbeing$X15..Gender..1..female..2..male.), col = NA, pch = 22, pt.bg = col)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/stacked-barplot-2.png" alt="plot of chunk stacked-barplot-2" class="wide" /&gt;&lt;/p&gt;

&lt;h2 id="par"&gt;par&lt;/h2&gt;
&lt;p&gt;All of these &lt;code&gt;col&lt;/code&gt;, &lt;code&gt;pch&lt;/code&gt;, &lt;code&gt;bg&lt;/code&gt;, &lt;code&gt;fg&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &amp;amp;c. commands are graphical
parameters passed to &lt;code&gt;par&lt;/code&gt;. You can set their global defaults with &lt;code&gt;par&lt;/code&gt;,
but they won’t necessarily apply to the same scope as when you pass them
within a function. For example, &lt;code&gt;bg&lt;/code&gt; applies to the outer canvas’s background.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;par(bg = "yellow")
plot(Total ~ id, data = pilgrams, type = "l")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/par-1.png" alt="plot of chunk par-1" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;You might use this to set fonts across all of your plots.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;par(family = "serif", font = 3, font.lab = 3, font.main = 2, font.sub = 3)
plot(Total ~ id, data = pilgrams, type = "l", main = "Pilgrams")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/par-2.png" alt="plot of chunk par-2" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;I tend to find the global namespace unpleasant, so I like to wrap that
in a function that closes the device afterwards, with &lt;code&gt;dev.off&lt;/code&gt;.
(The settings only apply to the current device.)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plot.something &amp;lt;- function(a, b, c, e, f) {
  par(family = 'serif', font = 3, font.lab = 3, font.main = 2, font.sub = 3)
  plot(a ~ b, col = c)
  lines(d, e)
  # ...
  dev.off()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;mfrow&lt;/code&gt; and &lt;code&gt;mfcol&lt;/code&gt; allow you to make multiple plots in one device&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;par(mfrow = c(2, 2))
plot(lm(Men ~ Women, data = pilgrams), mfrow = c(2, 2))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/par-3.png" alt="plot of chunk par-3" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bty&lt;/code&gt; lets you change the outer border of the plot.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plot(Total ~ id, data = pilgrams, type = "l", bty = "l")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/par-4.png" alt="plot of chunk par-4" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Its options are quite hilarious; here is its entry in &lt;code&gt;?par&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;‘bty’ A character string which determined the type of ‘box’ which
     is drawn about plots.  If ‘bty’ is one of ‘"o"’ (the
     default), ‘"l"’, ‘"7"’, ‘"c"’, ‘"u"’, or ‘"]"’ the resulting
     box resembles the corresponding upper case letter.  A value
     of ‘"n"’ suppresses the box.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Most plotting commands call &lt;code&gt;plot.new&lt;/code&gt;, which clears the plot by
default. Setting &lt;code&gt;new&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt; makes it not clear the plot, which
can help you build up more complicated plots.&lt;/p&gt;

&lt;h2 id="line-plots"&gt;Line plots&lt;/h2&gt;
&lt;p&gt;Displaying multiple sets of lines and points on a graph gets more messy.
For example, let’s say we want to make two lines to represent pilgram
counts. One is for people on horseback, and the other is for people on
foot. I like to start with an empty plot of the full range so we don’t
cut anything off. Let’s also put the labels and remove the axes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plot.pilgram.base &amp;lt;- function() {
  plot(0, 0,
    xlim = range(pilgrams$id),
    ylim = c(0, max(c(pilgrams$Foot, pilgrams$Bicicle))),
    xlab = "Month", ylab = "Number of pilgrams",
    main = "Pilgrams by month and transportation medium", 
    axes = FALSE, type = "n")
}
plot.pilgram.base()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/complicated-1.png" alt="plot of chunk complicated-1" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;The key there is &lt;code&gt;type = 'n'&lt;/code&gt;, which makes no data be plotted.
Now we can add the lines one at a time.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plot.pilgram.lines &amp;lt;- function() {
  lines(Foot ~ id, data = pilgrams, lty = 1)
  lines(Bicicle ~ id, data = pilgrams, lty = 2)
  legend("topleft", c("Foot", "Bicycle"), title = "Transportation media", lty = 1:2)
}
plot.pilgram.base()
plot.pilgram.lines()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/complicated-2.png" alt="plot of chunk complicated-2" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;I removed the axes because the default axes are usually quite
ugly. Now let’s add prettier axes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plot.pilgram.axes &amp;lt;- function() {
  axis(1, at = seq(1, 80, 10), labels = paste("January", unique(pilgrams$year)))
  par(las = 1)
  axis(2, at = seq(0, 60000, 10000), labels = c(0, paste0(1:6, "0,000")))
}
plot.pilgram.base()
plot.pilgram.lines()
plot.pilgram.axes()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/complicated-3.png" alt="plot of chunk complicated-3" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;The tick marks go at &lt;code&gt;at&lt;/code&gt;, and they are labeled with &lt;code&gt;labels&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id="use-ggplot"&gt;Use ggplot&lt;/h2&gt;
&lt;p&gt;I just showed you some simple bar plots, strip chart and
line plots in base R graphics. Each one only took a few lines,
but they were sort of complicated. Moreover, each plot type
took slightly different inputs, so I needed to transform the
data a bit differently for each one and to send different
parameters for each one. This is what makes base R graphics.&lt;/p&gt;

&lt;p&gt;ggplot, on the other hand, has a much more reasonable and standardized
plot-configuration interface (through the grammar of graphics). The
equivalent ggplot commands for all of these plots would have been about
as complicated but much more predictable and consistent across plot types.&lt;/p&gt;

&lt;p&gt;I still use base R graphics for &lt;a href="/music"&gt;music videos&lt;/a&gt;, but
I try to use ggplot for everything else.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-07-31:/!/fms-symphony/index.html</id>
    <title type="html">FMS Symphony</title>
    <published>2013-07-31T07:00:00Z</published>
    <updated>2013-07-31T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/fms-symphony/index.html"/>
    <content type="html">&lt;p&gt;My band &lt;a href="http://csvsoundsystem.com"&gt;CSV Soundsystem&lt;/a&gt; made a music video
about the financial crisis.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://fms.csvsoundsystem.com"&gt;&lt;img src="/!/fms-symphony/fms-symphony.png" alt="FMS Symphony" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read more here.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://harmony-institute.org/therippleeffect/2013/02/13/hi-data-analysts-make-music-at-bicoastal-datafest/"&gt;Harmony Institute&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://sunlightfoundation.com/blog/2013/02/04/datafest-amazing-things-can-happen-in-a-very-short-time/"&gt;Sunlight Foundation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.kuechenstud.io/datenschau/podcast/ds008/"&gt;Küchenstud.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.dnainfo.com/new-york/20130429/greenpoint/data-driven-band-csv-soundsystem-makes-music-from-spreadsheets"&gt;DNAinfo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.stanforddaily.com/2013/02/03/stanford-and-columbia-host-bicoastal-datafest/"&gt;The Stanford Daily&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-07-29:/!/socrata-calendars/index.html</id>
    <title type="html">Open Calendars</title>
    <published>2013-07-29T07:00:00Z</published>
    <updated>2013-07-29T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/socrata-calendars/index.html"/>
    <content type="html">&lt;p&gt;To a lot of people, we can get “data” out of an SQL database but not out
of a water bottle. I like to break this distinction; we can extract numbers
from of anything, and we can turn numbers into anything.&lt;/p&gt;

&lt;p&gt;On that note, my new favorite Socrata data visualization is the calendar.&lt;/p&gt;

&lt;h2 id="socrata-visualization-types"&gt;Socrata visualization types&lt;/h2&gt;
&lt;p&gt;Socrata is more than a place to dump raw tables, or at least
it tries to be; you can make various charts and maps, and you
can serve non-tabular information to some degree.&lt;/p&gt;

&lt;p&gt;There are many ways that a particular dataset could be visualized.
Socrata has 20 ways. Here they are.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/display-types.png" alt="plot of chunk display-types" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;There are a lot of Socrata &lt;a href="/!/socrata-genealogies#term-view"&gt;views&lt;/a&gt; that don’t
have display types listed. I don’t know what’s up with that.&lt;/p&gt;

&lt;p&gt;Anyway, I looked through the different visualization types and became quite interested
in calendars.&lt;/p&gt;

&lt;h2 id="people-actually-use-calendars"&gt;People actually use calendars&lt;/h2&gt;
&lt;p&gt;The calendar is
&lt;a href="https://data.oregon.gov/dataset/Public-Meetings-3-Month-View-/4775-yg3b?"&gt;what it sounds like&lt;/a&gt;.
Some of them are reasonably popular.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/calendar-use.png" alt="plot of chunk calendar-use" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;Let’s look at some specific calendars.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;calendar.use &amp;lt;- subset(socrata, displayType == "calendar")[c("portal", "id", "viewCount")]
calendar.use[order(calendar.use$viewCount, decreasing = T), ][1:5, c("portal", "id", "viewCount")]
##                    portal        id viewCount
## 32659         data.mo.gov mahp-izvx    121455
## 43101 data.kingcounty.gov p98f-kyer     11164
## 49823     data.oregon.gov 4wcf-m6kg     11080
## 49741     data.oregon.gov imfn-d2p5     10559
## 52858     data.oregon.gov pw6y-72a2      6167
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The most-viewed is Missouri’s &lt;a href="https://data.mo.gov/Government-Administration/Open-Meetings-Calendar/mahp-izvx?"&gt;open meetings calendar&lt;/a&gt;.
They also have a different view of the calendar &lt;a href="http://www.mo.gov/meetings/"&gt;outside the portal&lt;/a&gt;,
with an RSS feed from the Socrata portal. But I don’t know how the calendar on Socrata got so many views.&lt;/p&gt;

&lt;p&gt;It looks like some other portals are using calendars a lot too,
but usually with several separate calendars instead of one huge one.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/calendar-use-3.png" alt="plot of chunk calendar-use-3" class="wide" /&gt;&lt;/p&gt;

&lt;h2 id="the-cool-thing-about-socrata-calendars"&gt;The cool thing about Socrata calendars&lt;/h2&gt;
&lt;p&gt;The cool thing about Socrata calendars is that you can download them
as a spreadsheet.&lt;/p&gt;

&lt;p&gt;There are lots of different calendar programs. Most of them are way
better for calendaring than Socrata. They also typically have import
and export tools for transferring your calendar between different
calendar tools.&lt;/p&gt;

&lt;p&gt;But as far as I can tell, none of the main calendar programs lets
you export to a format that isn’t special to. As far as I can tell,
Outlook, iCal and Google Calendar can import and export iCal files (&lt;code&gt;.ics&lt;/code&gt;).
This lets you move your data among calendar programs, but it’s
harder to connect them to non-calendar datasets.&lt;/p&gt;

&lt;!--
http://www.zimbra.com/desktop/help/en_US/Calendar/Exporting_your_iCal_calendar.htm
http://office.microsoft.com/en-us/outlook-help/transfer-calendars-between-outlook-and-google-calendar-HA010167495.aspx
--&gt;

&lt;h3 id="the-calendar-is-just-one-possible-visualization-of-the-same-data"&gt;The calendar is just one possible visualization of the same data&lt;/h3&gt;
&lt;p&gt;Because calendar data is data just like any other data, you can visualize
it in any number of ways. For a very rough example, we search Socrata for
Oregon’s calendars,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;oregon.calendars &amp;lt;- subset(socrata, portal == "data.oregon.gov" &amp;amp; displayType == "calendar")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;we find out what datasets they visualize,&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/search-2.png" alt="plot of chunk search-2" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;we look up one of the tables,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;table.429573 &amp;lt;- subset(socrata, tableId == 429573)[c("id", "name", "displayType")]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and we find the associated views.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://data.oregon.gov/-/-/b574-ggwh"&gt;Domoic acid results calendar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://data.oregon.gov/-/-/3eya-wjrj"&gt;Domoic acid results list&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://data.oregon.gov/-/-/225z-wxd7"&gt;Domoic acid sample map&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://data.oregon.gov/-/-/mjdt-ztkh"&gt;Domoic acid sample chart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we have an example of how the calendar is just one of many possible
visualizations of the same dataset.&lt;/p&gt;

&lt;h2 id="analysis-of-a-socrata-calendar"&gt;Analysis of a Socrata calendar&lt;/h2&gt;
&lt;p&gt;Socrata’s representation of a calendar as a table with easy importing and
exporting is really cool. But Socrata’s data analysis tools are leave much
to be desired. So I downloaded the calendars and played with them in R.&lt;/p&gt;

&lt;h3 id="combining-calendars"&gt;Combining calendars&lt;/h3&gt;
&lt;p&gt;I downloaded Oregon’s and Missouri’s public meetings calendars and combined
them into one R data frame. Now I can have fun.&lt;/p&gt;

&lt;h3 id="who-has-more-meetings"&gt;Who has more meetings?&lt;/h3&gt;
&lt;p&gt;Oregon has 3436 meetings.
Oregon even has one meeting in Washington!&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/more-meetings.png" alt="plot of chunk more-meetings" class="wide" /&gt;&lt;/p&gt;

&lt;h3 id="day-of-week"&gt;Day of week&lt;/h3&gt;
&lt;p&gt;Meetings are usually in the middle of the week.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/day-of-week.png" alt="plot of chunk day-of-week" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;More precisely, most meetings start in the middle of the week, and
you’ll see later that most meetings last less than a day.&lt;/p&gt;

&lt;h3 id="date-cleaning"&gt;Date cleaning&lt;/h3&gt;
&lt;p&gt;Let’s clean up the dates so we can look at when meetings happen and how long they are.&lt;/p&gt;

&lt;p&gt;A bunch of the meetings have end times before their start times. Also, about a third of
the meetings don’t have end times, but I’m not going to worry about that for now.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/meeting-length-1.png" alt="" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;We could take a look at them like so.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;subset(public.meetings, Duration &amp;lt; 0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But rather than figuring out what’s wrong, let’s live life on the edge and just ignore them.&lt;/p&gt;

&lt;p&gt;&lt;img src="figure/meeting-length-2.png" alt="" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;A meeting has already been planned for 2020!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;subset(public.meetings, Start &amp;gt; as.POSIXlt(as.Date("2015-01-01")))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s for the Health Care Acquired Infections Advisory Committee, in the
Portland State Office Building room 1D on April 11, 2020 at 1 pm.
(I think that’s an accident.)&lt;/p&gt;

&lt;h3 id="meeting-durations"&gt;Meeting durations&lt;/h3&gt;
&lt;p&gt;Some of these meetings are pretty long. The three longest are each a month long.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;subset(public.meetings, Duration &amp;gt; 400)[c("Group", "Meeting", "Start", "End")]
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Group&lt;/th&gt;
      &lt;th&gt;Start&lt;/th&gt;
      &lt;th&gt;End&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Health Authority, Oregon&lt;/td&gt;
      &lt;td&gt;2013-02-04 13:00&lt;/td&gt;
      &lt;td&gt;2013-03-04 13:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Health Authority, Oregon&lt;/td&gt;
      &lt;td&gt;2013-04-30 00:00&lt;/td&gt;
      &lt;td&gt;2013-05-31 00:00&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Housing/Community Services Department&lt;/td&gt;
      &lt;td&gt;2012-04-04 08:00&lt;/td&gt;
      &lt;td&gt;2012-05-04 17:00&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Those three longest meetings got me thinking:
Maybe there are clusters of durations. Like maybe they’re either an hour or two,
a day, a week or a month. I didn’t look very hard, but seven clusters seems okay.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public.meetings.clean &amp;lt;- subset(public.meetings, !is.na(Duration) &amp;amp; Duration &amp;gt; 0)
clusterings &amp;lt;- list()
for (n in 1:10) {
  clustering &amp;lt;- kmeans(log10(public.meetings.clean$Duration), n)
  clusterings[[n]] &amp;lt;- clustering
  public.meetings.clean[paste0("cluster", n)] &amp;lt;- factor(clustering$cluster)
}

ggplot(public.meetings.clean) + aes(color = cluster7, x = 1, y = Duration) + 
  geom_jitter(alpha = 0.2) + scale_y_log10("Duration (hours)", breaks = 10^(0:3)) + 
  scale_x_continuous("", breaks = c()) + scale_color_discrete("Cluster") + 
  labs(title = "Clusters of public meeting durations")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="figure/clusters.png" alt="plot of chunk clusters" class="wide" /&gt;&lt;/p&gt;

&lt;p&gt;So the meeting durations seem clustered around these durations.
(The paranthetical durations are the mean durations for the corresponding clusters.)
&lt;!-- sort(10^clusterings[[7]]$centers) --&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;An hour (1.03 hours)&lt;/li&gt;
  &lt;li&gt;Half a workday (2.41 hours)&lt;/li&gt;
  &lt;li&gt;A workday (5.89 hours)&lt;/li&gt;
  &lt;li&gt;Two workdays (32.44 hours)&lt;/li&gt;
  &lt;li&gt;A work week (119.92 hours)&lt;/li&gt;
  &lt;li&gt;Two weeks (322.59 hours)&lt;/li&gt;
  &lt;li&gt;A month (714.32 hours)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="thoughts"&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;My aimless exploration of Oregon’s and Missouri’s public meetings isn’t
outrageously interesting, but it demonstrates what is possible when a
calendar’s data is fundamentally open. Along these lines, I have two thoughts.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Prevent data from becoming closed by opening them at their sources.&lt;/li&gt;
  &lt;li&gt;Anything could be data, and data could be anything.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="opening-data-at-their-sources"&gt;Opening data at their sources&lt;/h3&gt;
&lt;p&gt;Typical calendar software can import and export only from other calendar
software. I wouldn’t say that Socrata’s calendar visualization is anywhere
near calendar software, we can see it as an attempt at creating calendar
software whose data are fundamentally open.&lt;/p&gt;

&lt;p&gt;Take a look at the World Bank Open Finances
&lt;a href="https://finances.worldbank.org/dataset/Global-Open-Data-Calendar/g4sx-dwxc"&gt;open data events calendar&lt;/a&gt;,
which is populated by this
&lt;a href="https://finances.worldbank.org/dataset/Global-Open-Data-Calendar-Entry-Form/qdbh-rfd3?"&gt;form&lt;/a&gt;
that populates an.
Any data that is sent into the calendar immediately made available
to the public in various formats that can be used a wide variety of programs.&lt;/p&gt;

&lt;p&gt;There’s lots of siloed data in government, and we need better software and
methods for opening that up. But let’s also make tools that prevent data from
becoming siloed in the first place. Imagine if Outlook, Google Calendar,
or whatever calendar software you use had a CSV export option.&lt;/p&gt;

&lt;h3 id="anything-could-be-data-and-data-could-be-anything"&gt;Anything could be data, and data could be anything&lt;/h3&gt;
&lt;p&gt;For someone like me, it’s not a big deal if standard calendar software
does not allow CSV export; I could easily have done the same analysis I did
above from iCal files, though it would have taken a bit longer. My larger
concern is that people don’t think of calendars and other “apps” as data.&lt;/p&gt;

&lt;p&gt;To me, anything could be turned into data, and data could be turned into
anything. For example, treasury cash flows that start
out as &lt;a href="https://www.fms.treas.gov/dts"&gt;nonstandard text files&lt;/a&gt; can be
turned into &lt;a href="http://treasury.io"&gt;tabular data&lt;/a&gt; and then
&lt;a href="http://fms.csvsoundsystem.com"&gt;music&lt;/a&gt;.
Turns of a turnstile can recorded, stored in a
&lt;a href="http://www.mta.info/developers/turnstile.html"&gt;really strange format&lt;/a&gt;,
&lt;a href="https://github.com/ajschumacher/datathon"&gt;parsed into a nicer format&lt;/a&gt;
and turned into &lt;a href="/!/ridership-rachenitsa"&gt;music&lt;/a&gt;.
And we could collect some information about a bunch of parking lots,
put it in a &lt;a href="https://data.sfgov.org/Transportation/Off-Street-parking-lots-and-parking-garages/uupn-yfaw?"&gt;data table&lt;/a&gt;
and turn that into &lt;a href="https://twitter.com/internetrebecca/status/352955293291913217"&gt;cookies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Much of our statistical
knowledge is based around a concept of a table, with columns as
variables (like “eye color”) and rows as observations. (So each row might
be a different person.) This tabular representation is what
I think of as “data”.&lt;/p&gt;

&lt;p&gt;If we can represent the world as data, we can apply many quantitative
analytical methods to the data. First, we can convert data into other
data by combining datasets, building models, &amp;amp;c. And then we can convert
data back into real-world representations, like charts, apps, music and food.&lt;/p&gt;

&lt;p&gt;But a lot of people don’t realize this. I see this concept is a major part of
what I’ll call “data literacy”. I propose that a lack of understanding of this
concept contributes to the siloing of data and that teaching this concept is
an important part of the advance of open data.&lt;/p&gt;
</content>
  </entry>
</feed>

