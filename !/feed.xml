<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://www.thomaslevine.com/</id>
  <title>Thomas Levine</title>
  <updated>2013-07-01T07:00:00Z</updated>
  <link rel="alternate" href="http://www.thomaslevine.com/"/>
  <link rel="self" href="http://www.thomaslevine.com/!/feed.xml"/>
  <author>
    <name>Thomas Levine</name>
    <uri>http://www.thomaslevine.com</uri>
  </author>
  <entry>
    <id>tag:www.thomaslevine.com,2013-07-01:/!/setxkbmap-aliases/index.html</id>
    <title type="html">setxkbmap aliases</title>
    <published>2013-07-01T07:00:00Z</published>
    <updated>2013-07-01T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/setxkbmap-aliases/index.html"/>
    <content type="html">&lt;p&gt;I normally use the Dvorak keyboard layout, so I configure Dvorak to be the
default layout on my computers. When other people use my computers, they
normally want to switch the layout to qwerty. So I have this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias aoeu='setxkbmap us'
alias asdf='setxkbmap us -variant dvorak'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I can just type the home row left hand to switch between these two
layouts.&lt;/p&gt;

&lt;p&gt;I sometimes use the Dvorak-inspired French and Swedish layouts. I can select
the French one with &lt;code&gt;setxkbmap&lt;/code&gt; like so.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias fr='setxkbmap fr -variant dvorak'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I still haven’t figured out how to select the Swedish one with &lt;code&gt;setxkbmap&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-06-14:/!/brainstorming/index.html</id>
    <title type="html">Inspiration for questions</title>
    <published>2013-06-14T07:00:00Z</published>
    <updated>2013-06-14T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/brainstorming/index.html"/>
    <content type="html">&lt;p&gt;I have various mental lists of ways of asking more questions, but I only seem
to remember them when I need them. I’m trying to write them all down here.&lt;/p&gt;

&lt;p&gt;When you want to think of something new about some thing, ask questions about
it that emphasize the words listed below. The quoted questions are responses
to the sentence “I like broccili”.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Five Ws
    &lt;ul&gt;
      &lt;li&gt;who (“Who else do you know who likes broccili?”)&lt;/li&gt;
      &lt;li&gt;what (“What else do you like?”)&lt;/li&gt;
      &lt;li&gt;when (“When did you start liking broccili?”)&lt;/li&gt;
      &lt;li&gt;where (“Where do you like to eat broccili?”)&lt;/li&gt;
      &lt;li&gt;why (“Why do you like broccili?”)&lt;/li&gt;
      &lt;li&gt;how (“How do you prepare broccili?”)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Senses
    &lt;ul&gt;
      &lt;li&gt;sound (“What does broccili sound like?”)&lt;/li&gt;
      &lt;li&gt;feel (“What does broccili feel like?”)&lt;/li&gt;
      &lt;li&gt;smell (“What does broccili smell like?”)&lt;/li&gt;
      &lt;li&gt;taste (“What does broccili taste like?”)&lt;/li&gt;
      &lt;li&gt;look (“What does broccili look like?”)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Switch the roles of observers. (“Does broccili like you?”)&lt;/li&gt;
  &lt;li&gt;Vocabulary
    &lt;ul&gt;
      &lt;li&gt;“What is broccili?”&lt;/li&gt;
      &lt;li&gt;“What do you mean by ‘like’?”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Motivation
    &lt;ul&gt;
      &lt;li&gt;Why do you mention that you like broccili?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-06-07:/!/tmux-aliases/index.html</id>
    <title type="html">tmux aliases</title>
    <published>2013-06-07T07:00:00Z</published>
    <updated>2013-06-07T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/tmux-aliases/index.html"/>
    <content type="html">&lt;p&gt;Before I implemented my &lt;code&gt;tmuxa&lt;/code&gt; and &lt;code&gt;tmuxl&lt;/code&gt; aliases, the three &lt;code&gt;tmux&lt;/code&gt; calls
that I used most often were &lt;code&gt;tmux&lt;/code&gt;, &lt;code&gt;tmux list-sessions&lt;/code&gt; and &lt;code&gt;tmux attach&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ grep ^tmux ~/.history/sh-201*|sed -e s/^.*:// -e 's/ *$//' |sort|uniq -c
    127 tmux
    149 tmuxa
      2 tmuxa 0
      1 tmuxa -t0
      3 tmuxa -t 0
      6 tmuxa -t23
      1 tmuxa -t 23
      4 tmuxa -t32
      1 tmuxa -t 5
     15 tmux attach
      2 tmux attach -t0
      1 tmux attach -t16
      1 tmux attach -t18
      2 tmux attach -t 23
      1 tmux attach -t27
      1 tmux attach -t28
      1 tmux attach -t 32
     18 tmuxl
      1 tmux --list-sessions
      7 tmux list-sessions
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Those commands are long, so I &lt;a href="https://github.com/tlevine/.prophyl-teh-awesum/blob/master/source/tmux"&gt;made them shorter&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias tmuxl='tmux list-sessions'
alias tmuxa='tmux attach'
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-06-02:/!/magic-r-commands/index.html</id>
    <title type="html">Magic R commands</title>
    <published>2013-06-02T07:00:00Z</published>
    <updated>2013-06-02T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/magic-r-commands/index.html"/>
    <content type="html">&lt;p&gt;I’ve never come up with a good way for learning/teaching the cool parts of R.
I guess that’s just how R is; it’s all a hack. Anyway, here are some magic
incantations.&lt;/p&gt;

&lt;h2 id="general-stuff"&gt;General stuff&lt;/h2&gt;
&lt;p&gt;When loading a CSV, don’t convert strings to factors.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;read.csv('csvsoundsystem.com/soundsystem.csv', stringsAsFactors = F)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use ProjectTemplate.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(ProjectTemplate)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;sqldf&lt;/code&gt; works on R data.frames and on other databases&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqldf('SELECT foo FROM bar') # Use the bar data.frame
sqldf('SELECT foo FROM bar', dbname = 'baz.db') # Use the baz.db SQLite database
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;mapply&lt;/code&gt; maps along a matrix, passing multiple arguments to the function&lt;/p&gt;

&lt;p&gt;Show all factor levels in a ggplot&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(iris[1:50,]) + aes(x = Species, y = Sepal.Length) +
  scale_x_discrete('Species', drop = F) + geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="maintenance"&gt;Maintenance&lt;/h2&gt;
&lt;p&gt;Update your packages.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;update.packages()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="rprofile"&gt;.Rprofile&lt;/h2&gt;
&lt;p&gt;Set your preferred mirror&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r &amp;lt;- getOption("repos")
r["CRAN"] &amp;lt;- "http://cran.mirrors.hoobly.com"
options(repos = r)
rm(r)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remove the carrots from the beginnings of the lines so that you can run code
that you’ve copied from the shell.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options(prompt="  ")
options(continue="+ ") 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make the screen wide&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;options(width=160)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save your command history and output&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Sys.setenv(R_HISTSIZE='100000')
sink(file = paste('~/.history/r-log-', strftime(Sys.time(), '%F %H:%M:%OS9'), '-', sep = ''), split=T)
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.thomaslevine.com,2013-05-30:/!/bookmarks/index.html</id>
    <title type="html">Bookmarks</title>
    <published>2013-05-30T07:00:00Z</published>
    <updated>2013-05-30T07:00:00Z</updated>
    <link rel="alternate" href="http://www.thomaslevine.com/!/bookmarks/index.html"/>
    <content type="html">&lt;p&gt;I used to use &lt;a href="https://delicious.com/tlevine"&gt;delicious&lt;/a&gt;,
but I always found it rather clumsy. I tried
&lt;a href="https://github.com/tlevine/medial_temporal_lobe"&gt;gitmarks&lt;/a&gt;,
but it also seemed clumsy. So I made my own bookmark manager,
&lt;a href="https://github.com/tlevine/medial_temporal_lobe"&gt;medial-temporal lobe&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="how"&gt;How&lt;/h2&gt;
&lt;p&gt;Here’s how you use it.&lt;/p&gt;

&lt;p&gt;Save a webpage.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mtl add http://thomaslevine.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A randomly-named directory gets created in
&lt;code&gt;~/.medial_temporal_lobe/memories&lt;/code&gt;. Inside that directory are
an &lt;code&gt;info&lt;/code&gt; file with metadata, like the URL, and a &lt;code&gt;source&lt;/code&gt; file,
with the content of the webpage (downloaded with wget).&lt;/p&gt;

&lt;p&gt;You can also set tags.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mtl add -t people,pink http://thomaslevine.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates symlinks inside &lt;code&gt;~/.medial_temporal_lobe/tags&lt;/code&gt;,
linking to the file in &lt;code&gt;~/.medial_temporal_lobe/memories&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.medial_temporal_lobe&lt;/code&gt; is a directory, so you can
&lt;a href="https://github.com/tlevine/.medial_temporal_lobe"&gt;version it with git&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I haven’t implemented any functions other than &lt;code&gt;add&lt;/code&gt;, so you have to use
other tools for viewing, editing and deleting the bookmarks.&lt;/p&gt;

&lt;h2 id="differences"&gt;Differences&lt;/h2&gt;
&lt;p&gt;I find it much easier and faster and generally more convenient to
add bookmarks with &lt;code&gt;mtl&lt;/code&gt; than with Delicious, and I wind up saving
more things.&lt;/p&gt;

&lt;p&gt;It is quite easy to tag things, so I add more tags. I generally make an
alias to facilitate this. For example, I was reading about configuring
bundler earlier today, so I wound up with a bunch of things that I wanted
to tag with “ruby” and “bundler”, so I made this alias.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias a='mtl add -t ruby,bundler'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then I ran &lt;code&gt;a $url&lt;/code&gt; for a bunch of urls.&lt;/p&gt;

&lt;p&gt;It is also quite easy to search things, even though I haven’t implemented
an &lt;code&gt;mtl&lt;/code&gt; command for it. I just run something like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/.medial_temporal_temporal/tags/ruby
cat */info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You could also search within the files, including the saved files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -r ruby ~/.medial_temporal_lobe/memories
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also use this as a mirror for files I want to read. This is especially
helpful when I’m on a train. (I like trains.) I can bookmark/download a
bunch of files, commit them, push them, pull them from my laptop, get on
the train and then read them without an internet connection. This is, of
course, quite easy to do by other means, but it’s not something I would
have done with Delicious.&lt;/p&gt;
</content>
  </entry>
</feed>

